name: Testimonial creation
  
on:
  issues:
    types: [opened]

jobs:
  check-label:
    runs-on: ubuntu-latest
    name: Check Testimonial Label
    steps:
      - uses: renanmav/match-label-action@v3
        with:
          allowed: >
            testimonial
      - name: Validate label
        if: steps.label.outputs.match == 'testimonial'
        run: echo "Issue has the testimonial label"
  create-file:
    runs-on: ubuntu-latest
    name: Create Testimonial File and Commit it
    needs: [check-label]
    steps:
      - uses: actions/checkout@v3
      - uses: stefanbuck/github-issue-parser@v3
        id: issue-parser
        with:
          template-path: .github/ISSUE_TEMPLATE/testimonial.yml
          body: ${{ github.event.issue.body }}
      - run: cat ${HOME}/issue-parser-result.json
      - name: Current Date
        id: date
        uses: Kaven-Universe/github-action-current-date-time@v1
        with:
          format: "YYYY-MM-DD"
      - name: Create folder
        run: |
          mkdir -p data/${{ steps.issue-parser.outputs.issueparser_name }}
      - uses: finnp/create-file-action@master
        env:
          FILE_NAME: "data/${{ steps.issue-parser.outputs.issueparser_name }}/${{context.payload.sender.login}}.json"
          FILE_DATA: '{"title": "${{ steps.issue-parser.outputs.issueparser_title }}", "description": "${{ steps.issue-parser.outputs.issueparser_description}}", "date": "${{ steps.date.outputs.time }}"}'
      - name: Setup Git config
        run: |
          # setup the username and email. I tend to use 'GitHub Actions Bot' with no email by default
          git config user.name "GitHub Actions Bot"
          git config user.email "<>"
      - name: Commit
        run: |
          # setup the username and email. I tend to use 'GitHub Actions Bot' with no email by default
          git add --all
          git commit -m "New testimonial"
          git push origin main
      

     
          


